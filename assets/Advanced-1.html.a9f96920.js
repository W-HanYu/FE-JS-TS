import{_ as o}from"./Mapped-3.ee325329.js";import{_ as c,r as l,o as i,c as r,e as n,d as s,a as t,f as p}from"./app.2732c273.js";const u="/assets/typeof-object.29f8882f.png",k="/assets/typeeof-enum.6081f039.png",d="/assets/typeof-enum2.64b4fae5.png",m="/assets/object.a03a5be5.png",v="/assets/class1.9f39312e.png",b="/assets/class2.3ef8935b.png",y="/assets/class3.bf665525.png",e="/assets/ConditionalTS.e428fa43.gif",g="/assets/dis-exam.4923f8de.jpeg",f="/assets/naked.b36d47ef.jpeg",w="/assets/info-1.0ef854e4.jpeg",h="/assets/infer-2.ec3f66be.gif",x="/assets/infer-3.de96d6b1.jpeg",q="/assets/infer-4.49ca4715.jpeg",T="/assets/infer-6.f0fe000c.gif",_="/assets/infer-7.6d9a6c9f.jpeg",P="/assets/infer-8.61a3165c.gif",S="/assets/infer-9.85cb6ed9.gif",K="/assets/infer-10.477e4ef3.gif",C="/assets/Mapped-1.c4cf180b.jpeg",U="/assets/Mapped-2.8a0e7c47.gif",A="/assets/Mapped-4.41688ea0.gif",N="/assets/Mapped-5.ea6a265a.jpeg",j="/assets/Mapped-6.19c2b6b2.gif",I="/assets/Mapped-7.41b62b83.jpeg",W="/assets/Mapped-8.7573a2fd.jpeg",E="/assets/Mapped-9.bd3adf94.gif",R="/assets/Wapped-10.19415e53.jpeg",B="/assets/Wapped-11.e0395329.gif",M="/assets/Wapped-12.f253322d.jpeg",O="/assets/Wapped-13.fddfb149.gif",L="/assets/Wapped-14.6a5e65f0.jpeg",z="/assets/Wapped-15.b13a1afc.gif",Y="/assets/Wapped-16.090f599f.jpeg",F={},J=p(`<h2 id="_1-type-manipulation-\u7C7B\u578B\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#_1-type-manipulation-\u7C7B\u578B\u64CD\u4F5C" aria-hidden="true">#</a> 1.Type Manipulation \u7C7B\u578B\u64CD\u4F5C</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u5728\u638C\u63E1 TS \u57FA\u672C\u7684\u7C7B\u578B\u77E5\u8BC6\u77E5\u8BC6\u540E\uFF0C\u9762\u5BF9\u590D\u6742\u7684\u6E90\u7801\u548C\u590D\u6742\u7C7B\u578B\u903B\u8F91\uFF0C\u6211\u4EEC\u4ECD\u7136\u675F\u624B\u65E0\u7B56\u3002\u5176\u5B9E\u6211\u4EEC\u8FD8\u9700\u8981\u518D\u6B21\u57FA\u7840\u4E4B\u4E0A\uFF0C\u5C06\u57FA\u7840\u7C7B\u578B\u8054\u5408\u8D77\u6765\u505A\u51FA\u66F4\u591A\u4F18\u96C5\u7684\u7C7B\u578B\u58F0\u660E\u3002\vTypeScript \u4E2D\u6709\u5F88\u591A\u5173\u952E\u5B57\uFF0C\u5982\u679C\u4E0D\u53BB\u4E3B\u52A8\u63A5\u89E6\u7684\u8BDD\u5C31\u4F1A\u5C11\u4E86\u5F88\u591A\u53EF\u64CD\u4F5C\u6027\u3002\u4F8B\u5982\uFF1Ainfer\u3001keyof\u3001typeof\u3001extends \u4E4B\u7C7B\u7684\u3002\u8FD8\u6709\u6620\u5C04\u548C\u6A21\u677F\u5B57\u7B26\u4E32\u8FD9\u79CD\u6982\u5FF5</p></div><h3 id="_1-1-\u6CDB\u578B" tabindex="-1"><a class="header-anchor" href="#_1-1-\u6CDB\u578B" aria-hidden="true">#</a> 1.1 \u6CDB\u578B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myIdentity<span class="token operator">:</span> <span class="token operator">&lt;</span>Input<span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Input<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Input <span class="token operator">=</span> identity
or
<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identity</span><span class="token generic class-name"><span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">{</span>
  <span class="token keyword">return</span> arg<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myIdentity<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> Type<span class="token punctuation">)</span><span class="token operator">:</span> Type <span class="token punctuation">}</span> <span class="token operator">=</span> identity<span class="token punctuation">;</span>
\u63A5\u53E3\u5F62\u5F0F\u5B9A\u4E49\uFF1A
<span class="token keyword">interface</span> <span class="token class-name">GenericIdentifyFn</span> <span class="token punctuation">{</span>
    <span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">identify</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>arg<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> arg
<span class="token punctuation">}</span>
<span class="token keyword">let</span> myIdentify<span class="token operator">:</span> GenericIdentifyFn <span class="token operator">=</span> identify

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-keyof-\u7C7B\u578B\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_1-2-keyof-\u7C7B\u578B\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 1.2 keyof \u7C7B\u578B\u64CD\u4F5C\u7B26</h3><p>TypeScript \u5141\u8BB8\u6211\u4EEC\u904D\u5386\u67D0\u79CD\u7C7B\u578B\u7684\u5C5E\u6027\uFF0C\u5E76\u901A\u8FC7 keyof \u64CD\u4F5C\u7B26\u63D0\u53D6\u5176\u5C5E\u6027\u7684\u540D\u79F0\u3002keyof \u64CD\u4F5C\u7B26\u662F\u5728 TypeScript 2.1 \u7248\u672C\u5F15\u5165\u7684\uFF0C\u8BE5\u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u4E8E\u83B7\u53D6\u67D0\u79CD\u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C\u5176<code>\u8FD4\u56DE\u7C7B\u578B\u662F\u8054\u5408\u7C7B\u578B</code>\u3002</p><h4 id="keyof-\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#keyof-\u4ECB\u7ECD" aria-hidden="true">#</a> keyof \u4ECB\u7ECD</h4><ul><li>\u63A5\u53E3</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
  name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">;</span>
  location<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K1</span></span><span class="token operator">=</span><span class="token keyword">keyof</span> Person<span class="token punctuation">;</span><span class="token comment">//&quot;name&quot;| &quot;age&quot;|&quot;localtion&quot;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K2</span></span><span class="token operator">=</span><span class="token keyword">keyof</span> Person<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// numner|&quot;length&quot;|&quot;push&quot;....</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K3</span></span> <span class="token keyword">keyof</span> <span class="token punctuation">{</span><span class="token punctuation">[</span>x<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span>Person<span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//string|number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>::: info K3 \u8FD4\u56DE string \uFF5C number \u662F\u56E0\u4E3A\uFF1A\u5728 js \u4E2D\uFF0C\u5BF9\u8C61\u7684 key\uFF0Cobj[1]==obj[&quot;1&quot;] :::</p><ul><li>\u7C7B \u9664\u4E86\u63A5\u53E3\u5916\uFF0Ckeyof \u4E5F\u53EF\u4EE5\u7528\u4E8E\u64CD\u4F5C\u7C7B\uFF0C\u6BD4\u5982\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Semlinker&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> sname<span class="token operator">:</span> <span class="token keyword">keyof</span> Person<span class="token punctuation">;</span>
sname <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u82E5\u628A sname = &quot;name&quot; \u6539\u4E3A sname = &quot;age&quot; \u7684\u8BDD\uFF0CTypeScript \u7F16\u8BD1\u5668\u4F1A\u63D0\u793A\u4EE5\u4E0B\u9519\u8BEF\u4FE1\u606F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>Type <span class="token string">&#39;&quot;age&quot;&#39;</span> <span class="token keyword">is</span> not assignable to <span class="token keyword">type</span> <span class="token string">&#39;&quot;name&quot;&#39;</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u57FA\u672C\u6570\u636E\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> <span class="token constant">K1</span><span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span> <span class="token comment">// let K1: &quot;valueOf&quot;</span>
<span class="token keyword">let</span> <span class="token constant">K2</span><span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// let K2: &quot;toString&quot; | &quot;toFixed&quot; | &quot;toExponential&quot; | ...</span>
<span class="token keyword">let</span> <span class="token constant">K3</span><span class="token operator">:</span> <span class="token keyword">keyof</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span> <span class="token comment">// let K1: &quot;valueOf&quot;</span>
\u6B64\u5916 <span class="token keyword">keyof</span> \u4E5F\u79F0\u4E3A\u8F93\u5165\u7D22\u5F15\u7C7B\u578B\u67E5\u8BE2\uFF0C\u4E0E\u4E4B\u76F8\u5BF9\u5E94\u7684\u662F\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\uFF0C\u4E5F\u79F0\u4E3A\u67E5\u627E\u7C7B\u578B\u3002\u5728\u8BED\u6CD5\u4E0A\uFF0C\u5B83\u4EEC\u770B\u8D77\u6765\u50CF\u5C5E\u6027\u6216\u5143\u7D20\u8BBF\u95EE\uFF0C\u4F46\u6700\u7EC8\u4F1A\u88AB\u8F6C\u6362\u4E3A\u7C7B\u578B\uFF1A
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P1</span></span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P2</span></span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P3</span></span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token string">&quot;charAt&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// (pos: number) =&gt; string</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P4</span></span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;push&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// (...items: string[]) =&gt; number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">P5</span></span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="keyof-\u4F5C\u7528" tabindex="-1"><a class="header-anchor" href="#keyof-\u4F5C\u7528" aria-hidden="true">#</a> keyof \u4F5C\u7528</h4><p>JavaScript \u662F\u4E00\u79CD\u9AD8\u5EA6\u52A8\u6001\u7684\u8BED\u8A00\u3002\u6709\u65F6\u5728\u9759\u6001\u7C7B\u578B\u7CFB\u7EDF\u4E2D\u6355\u83B7\u67D0\u4E9B\u64CD\u4F5C\u7684\u8BED\u4E49\u53EF\u80FD\u4F1A\u5F88\u68D8\u624B\u3002\u4EE5\u4E00\u4E2A\u7B80\u5355\u7684 prop \u51FD\u6570\u4E3A\u4F8B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">prop</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5\u51FD\u6570\u63A5\u6536 obj \u548C key \u4E24\u4E2A\u53C2\u6570\uFF0C\u5E76\u8FD4\u56DE\u5BF9\u5E94\u5C5E\u6027\u7684\u503C\u3002\u5BF9\u8C61\u4E0A\u7684\u4E0D\u540C\u5C5E\u6027\uFF0C\u53EF\u4EE5\u5177\u6709\u5B8C\u5168\u4E0D\u540C\u7684\u7C7B\u578B\uFF0C\u6211\u4EEC\u751A\u81F3\u4E0D\u77E5\u9053 obj \u5BF9\u8C61\u957F\u4EC0\u4E48\u6837\u3002 \u90A3\u4E48\u5728 TypeScript \u4E2D\u5982\u4F55\u5B9A\u4E49\u4E0A\u9762\u7684 prop \u51FD\u6570\u5462\uFF1F\u6211\u4EEC\u6765\u5C1D\u8BD5\u4E00\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">prop</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> object<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u4E3A\u4E86\u907F\u514D\u8C03\u7528 prop \u51FD\u6570\u65F6\u4F20\u5165\u9519\u8BEF\u7684\u53C2\u6570\u7C7B\u578B\uFF0C\u6211\u4EEC\u4E3A obj \u548C key \u53C2\u6570\u8BBE\u7F6E\u4E86\u7C7B\u578B\uFF0C\u5206\u522B\u4E3A {} \u548C string \u7C7B\u578B\u3002\u7136\u800C\uFF0C\u4E8B\u60C5\u5E76\u6CA1\u6709\u90A3\u4E48\u7B80\u5355\u3002\u9488\u5BF9\u4E0A\u8FF0\u7684\u4EE3\u7801\uFF0CTypeScript \u7F16\u8BD1\u5668\u4F1A\u8F93\u51FA\u4EE5\u4E0B\u9519\u8BEF\u4FE1\u606F\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>Element implicitly has an <span class="token string">&#39;any&#39;</span> <span class="token keyword">type</span> <span class="token class-name">because</span> expression <span class="token keyword">of</span> <span class="token keyword">type</span> <span class="token string">&#39;string&#39;</span> can<span class="token string">&#39;t be used to index type &#39;</span><span class="token punctuation">{</span><span class="token punctuation">}</span>&#39;<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5143\u7D20\u9690\u5F0F\u5730\u62E5\u6709 any \u7C7B\u578B\uFF0C\u56E0\u4E3A string \u7C7B\u578B\u4E0D\u80FD\u88AB\u7528\u4E8E\u7D22\u5F15 {} \u7C7B\u578B\u3002\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u4F60\u53EF\u4EE5\u4F7F\u7528\u4EE5\u4E0B\u975E\u5E38\u66B4\u529B\u7684\u65B9\u6848\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">prop</span><span class="token punctuation">(</span>obj<span class="token operator">:</span> object<span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>obj <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u660E\u663E\u8BE5\u65B9\u6848\u5E76\u4E0D\u662F\u4E00\u4E2A\u597D\u7684\u65B9\u6848\uFF0C\u6211\u4EEC\u6765\u56DE\u987E\u4E00\u4E0B prop \u51FD\u6570\u7684\u4F5C\u7528\uFF0C\u8BE5\u51FD\u6570\u7528\u4E8E\u83B7\u53D6\u67D0\u4E2A\u5BF9\u8C61\u4E2D\u6307\u5B9A\u5C5E\u6027\u7684\u5C5E\u6027\u503C\u3002\u56E0\u6B64\u6211\u4EEC\u671F\u671B\u7528\u6237\u8F93\u5165\u7684\u5C5E\u6027\u662F\u5BF9\u8C61\u4E0A\u5DF2\u5B58\u5728\u7684\u5C5E\u6027\uFF0C\u90A3\u4E48\u5982\u4F55\u9650\u5236\u5C5E\u6027\u540D\u7684\u8303\u56F4\u5462\uFF1F\u8FD9\u65F6\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u672C\u6587\u7684\u4E3B\u89D2 keyof \u64CD\u4F5C\u7B26\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">prop</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4EE5\u4E0A\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528\u4E86 TypeScript \u7684\u6CDB\u578B\u548C\u6CDB\u578B\u7EA6\u675F\u3002\u9996\u5148\u5B9A\u4E49\u4E86 T \u7C7B\u578B\u5E76\u4F7F\u7528 extends \u5173\u952E\u5B57\u7EA6\u675F\u8BE5\u7C7B\u578B\u5FC5\u987B\u662F object \u7C7B\u578B\u7684\u5B50\u7C7B\u578B\uFF0C\u7136\u540E\u4F7F\u7528 keyof \u64CD\u4F5C\u7B26\u83B7\u53D6 T \u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C\u5176\u8FD4\u56DE\u7C7B\u578B\u662F\u8054\u5408\u7C7B\u578B\uFF0C\u6700\u540E\u5229\u7528 extends \u5173\u952E\u5B57\u7EA6\u675F K \u7C7B\u578B\u5FC5\u987B\u4E3A keyof T \u8054\u5408\u7C7B\u578B\u7684\u5B50\u7C7B\u578B\u3002 \u662F\u9AA1\u5B50\u662F\u9A6C\u62C9\u51FA\u6765\u905B\u905B\u5C31\u77E5\u9053\u4E86\uFF0C\u6211\u4EEC\u6765\u5B9E\u9645\u6D4B\u8BD5\u4E00\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Todo</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  done<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> todo<span class="token operator">:</span> Todo <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  text<span class="token operator">:</span> <span class="token string">&quot;Learn TypeScript keyof&quot;</span><span class="token punctuation">,</span>
  done<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token generic-function"><span class="token function">prop</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">prop</span><span class="token punctuation">(</span>todo<span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// const id: number</span>
<span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">prop</span><span class="token punctuation">(</span>todo<span class="token punctuation">,</span> <span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// const text: string</span>
<span class="token keyword">const</span> done <span class="token operator">=</span> <span class="token function">prop</span><span class="token punctuation">(</span>todo<span class="token punctuation">,</span> <span class="token string">&quot;done&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// const done: boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F88\u660E\u663E\u4F7F\u7528\u6CDB\u578B\uFF0C\u91CD\u65B0\u5B9A\u4E49\u540E\u7684 prop&lt;T extends object, K extends keyof T&gt;(obj: T, key: K) \u51FD\u6570\uFF0C\u5DF2\u7ECF\u53EF\u4EE5\u6B63\u786E\u5730\u63A8\u5BFC\u51FA\u6307\u5B9A\u952E\u5BF9\u5E94\u7684\u7C7B\u578B\u3002\u90A3\u4E48\u5F53\u8BBF\u95EE todo \u5BF9\u8C61\u4E0A\u4E0D\u5B58\u5728\u7684\u5C5E\u6027\u65F6\uFF0C\u4F1A\u51FA\u73B0\u4EC0\u4E48\u60C5\u51B5\uFF1F\u6BD4\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token function">prop</span><span class="token punctuation">(</span>todo<span class="token punctuation">,</span> <span class="token string">&quot;date&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u4E0A\u8FF0\u4EE3\u7801\uFF0CTypeScript \u7F16\u8BD1\u5668\u4F1A\u63D0\u793A\u4EE5\u4E0B\u9519\u8BEF\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>Argument <span class="token keyword">of</span> <span class="token keyword">type</span> <span class="token string">&#39;&quot;date&quot;&#39;</span> <span class="token keyword">is</span> not assignable to parameter <span class="token keyword">of</span> <span class="token keyword">type</span> <span class="token string">&#39;&quot;id&quot; | &quot;text&quot; | &quot;done&quot;&#39;</span><span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u5C31\u963B\u6B62\u6211\u4EEC\u5C1D\u8BD5\u8BFB\u53D6\u4E0D\u5B58\u5728\u7684\u5C5E\u6027</p><h4 id="keyof-\u4E0E\u5BF9\u8C61\u7684\u6570\u503C\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#keyof-\u4E0E\u5BF9\u8C61\u7684\u6570\u503C\u5C5E\u6027" aria-hidden="true">#</a> keyof \u4E0E\u5BF9\u8C61\u7684\u6570\u503C\u5C5E\u6027</h4><p>\u5728\u4F7F\u7528\u5BF9\u8C61\u7684\u6570\u503C\u5C5E\u6027\u65F6\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528 keyof \u5173\u952E\u5B57\u3002\u8BF7\u8BB0\u4F4F\uFF0C\u5982\u679C\u6211\u4EEC\u5B9A\u4E49\u4E00\u4E2A\u5E26\u6709\u6570\u503C\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u90A3\u4E48\u6211\u4EEC\u65E2\u9700\u8981\u5B9A\u4E49\u8BE5\u5C5E\u6027\uFF0C\u53C8\u9700\u8981\u4F7F\u7528\u6570\u7EC4\u8BED\u6CD5\u8BBF\u95EE\u8BE5\u5C5E\u6027\uFF0C \u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">class</span> <span class="token class-name">ClassWithNumericProperty</span> <span class="token punctuation">{</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;Semlinker&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> classWithNumeric <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassWithNumericProperty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>classWithNumeric<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0B\u9762\u6211\u4EEC\u6765\u4E3E\u4E2A\u793A\u4F8B\uFF0C\u4ECB\u7ECD\u4E00\u4E0B\u5728\u542B\u6709\u6570\u503C\u5C5E\u6027\u7684\u5BF9\u8C61\u4E2D\uFF0C\u5982\u4F55\u4F7F\u7528 keyof \u64CD\u4F5C\u7B26\u6765\u5B89\u5168\u5730\u8BBF\u95EE\u5BF9\u8C61\u7684\u5C5E\u6027\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">enum</span> Currency <span class="token punctuation">{</span>
  <span class="token constant">CNY</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span>
  <span class="token constant">EUR</span> <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span>
  <span class="token constant">USD</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> CurrencyName <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Currency<span class="token punctuation">.</span><span class="token constant">CNY</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u4EBA\u6C11\u5E01&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Currency<span class="token punctuation">.</span><span class="token constant">EUR</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u6B27\u5143&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>Currency<span class="token punctuation">.</span><span class="token constant">USD</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&quot;\u7F8E\u5143&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">CurrencyName[Currency.CNY] = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>CurrencyName<span class="token punctuation">[</span>Currency<span class="token punctuation">.</span><span class="token constant">CNY</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">CurrencyName[36] = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>CurrencyName<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0C\u9996\u5148\u5B9A\u4E49\u4E86\u4E00\u4E2A Currency \u679A\u4E3E\u7528\u4E8E\u8868\u793A\u4E09\u79CD\u8D27\u5E01\u7C7B\u578B\uFF0C\u63A5\u7740\u5B9A\u4E49\u4E00\u4E2A CurrencyName \u5BF9\u8C61\uFF0C\u8BE5\u5BF9\u8C61\u4F7F\u7528\u6570\u503C\u5C5E\u6027\u4F5C\u4E3A\u952E\uFF0C\u5BF9\u5E94\u7684\u503C\u662F\u8BE5\u8D27\u5E01\u7C7B\u578B\u7684\u540D\u79F0\u3002\u8BE5\u4EE3\u7801\u6210\u529F\u8FD0\u884C\u540E\uFF0C\u63A7\u5236\u53F0\u4F1A\u8F93\u51FA\u4EE5\u4E0B\u7ED3\u679C\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>CurrencyName[Currency.CNY] = \u4EBA\u6C11\u5E01
CurrencyName[36] = \u4EBA\u6C11\u5E01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u65B9\u4FBF\u7528\u6237\u80FD\u6839\u636E\u8D27\u5E01\u7C7B\u578B\u6765\u83B7\u53D6\u5BF9\u5E94\u7684\u8D27\u5E01\u540D\u79F0\uFF0C\u6211\u4EEC\u6765\u5B9A\u4E49\u4E00\u4E2A getCurrencyName \u51FD\u6570\uFF0C\u5177\u4F53\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getCurrencyName</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> map<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">name = </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">getCurrencyName</span><span class="token punctuation">(</span>Currency<span class="token punctuation">.</span><span class="token constant">CNY</span><span class="token punctuation">,</span> CurrencyName<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540C\u6837\uFF0CgetCurrencyName \u51FD\u6570\u548C\u524D\u9762\u4ECB\u7ECD\u7684 prop \u51FD\u6570\u4E00\u6837\uFF0C\u4F7F\u7528\u4E86\u6CDB\u578B\u548C\u6CDB\u578B\u7EA6\u675F\uFF0C\u4ECE\u800C\u6765\u4FDD\u8BC1\u5C5E\u6027\u7684\u5B89\u5168\u8BBF\u95EE\u3002\u6700\u540E\uFF0C\u6211\u4EEC\u6765\u7B80\u5355\u4ECB\u7ECD\u4E00\u4E0B keyof \u4E0E typeof \u64CD\u4F5C\u7B26\u5982\u4F55\u914D\u5408\u4F7F\u7528\u3002</p><h4 id="keyof-vs-typeof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#keyof-vs-typeof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> keyof VS typeof \u64CD\u4F5C\u7B26</h4><p>typeof \u64CD\u4F5C\u7B26\u7528\u4E8E\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B\u3002\u56E0\u6B64\u8FD9\u4E2A\u64CD\u4F5C\u7B26\u7684\u540E\u9762\u63A5\u7684\u59CB\u7EC8\u662F\u4E00\u4E2A\u53D8\u91CF\uFF0C\u4E14\u9700\u8981\u8FD0\u7528\u5230\u7C7B\u578B\u5B9A\u4E49\u5F53\u4E2D\u3002\u4E3A\u4E86\u65B9\u4FBF\u5927\u5BB6\u7406\u89E3\uFF0C\u6211\u4EEC\u6765\u4E3E\u4E00\u4E2A\u5177\u4F53\u7684\u793A\u4F8B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">let</span> man<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;Semlinker&quot;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">Human</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> man<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E86\u89E3\u5B8C typeof \u548C keyof \u64CD\u4F5C\u7B26\u7684\u4F5C\u7528\uFF0C\u6211\u4EEC\u6765\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u4ECB\u7ECD\u4E00\u4E0B\u5B83\u4EEC\u5982\u4F55\u7ED3\u5408\u5728\u4E00\u8D77\u4F7F\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">COLORS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  red<span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
  blue<span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u9996\u5148\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u83B7\u53D6 color \u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u7136\u540E\u901A\u8FC7 keyof \u64CD\u4F5C\u7B26\u83B7\u53D6\u8BE5\u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C</span>
<span class="token comment">// \u5373\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u8054\u5408\u7C7B\u578B &#39;red&#39; | &#39;blue&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Colors</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> <span class="token constant">COLORS</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> color<span class="token operator">:</span> Colors<span class="token punctuation">;</span>
color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>
color <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>

<span class="token comment">// Type &#39;&quot;yellow&quot;&#39; is not assignable to type &#39;&quot;red&quot; | &quot;blue&quot;&#39;.</span>
color <span class="token operator">=</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u540E\u7559\u5230\u601D\u8003\u9898\uFF0C\u6709\u5174\u8DA3\u7684\u5C0F\u4F19\u4F34\u53EF\u4EE5\u60F3\u4E00\u60F3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">StringIndexArray</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">NumberIndexArray</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K1</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> StringIndexArray<span class="token punctuation">;</span> <span class="token comment">// type K1 = string | number</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">K2</span></span> <span class="token operator">=</span> <span class="token keyword">keyof</span> NumberIndexArray<span class="token punctuation">;</span> <span class="token comment">// type K2 = number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u53C2\u8003</summary><p>\u8FD9\u6BB5\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E24\u4E2A TypeScript \u63A5\u53E3\uFF08interface\uFF09\uFF1A<code>StringIndexArray</code> \u548C <code>NumberIndexArray</code>\u3002\u8FD9\u4E24\u4E2A\u63A5\u53E3\u90FD\u5B9A\u4E49\u4E86\u4E00\u4E2A\u7D22\u5F15\u7B7E\u540D\uFF08index signature\uFF09\uFF0C\u7528\u4E8E\u8BBF\u95EE\u63A5\u53E3\u4E2D\u7684\u5C5E\u6027\u3002</p><p><code>StringIndexArray</code> \u63A5\u53E3\u7684\u7D22\u5F15\u7B7E\u540D\u5B9A\u4E49\u4E3A <code>[index: string]: string</code>\uFF0C\u8FD9\u610F\u5473\u7740\u53EF\u4EE5\u7528\u4EFB\u4F55\u5B57\u7B26\u4E32\u4F5C\u4E3A\u5C5E\u6027\u540D\u6765\u8BBF\u95EE <code>StringIndexArray</code> \u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\uFF0C\u5E76\u4E14\u5C5E\u6027\u7684\u503C\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u3002</p><p><code>NumberIndexArray</code> \u63A5\u53E3\u7684\u7D22\u5F15\u7B7E\u540D\u5B9A\u4E49\u4E3A <code>[index: number]: string</code>\uFF0C\u8FD9\u610F\u5473\u7740\u53EF\u4EE5\u7528\u4EFB\u4F55\u6570\u5B57\u4F5C\u4E3A\u5C5E\u6027\u540D\u6765\u8BBF\u95EE <code>NumberIndexArray</code> \u5BF9\u8C61\u4E2D\u7684\u5C5E\u6027\uFF0C\u5E76\u4E14\u5C5E\u6027\u7684\u503C\u5FC5\u987B\u662F\u5B57\u7B26\u4E32\u7C7B\u578B\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E24\u4E2A\u7C7B\u578B\u522B\u540D\uFF08type alias\uFF09\uFF1A<code>K1</code> \u548C <code>K2</code>\u3002\u8FD9\u4E9B\u7C7B\u578B\u522B\u540D\u7528\u4E8E\u83B7\u53D6\u63A5\u53E3\u4E2D\u7684\u5C5E\u6027\u540D\u79F0\uFF0C\u5373\u63A5\u53E3\u4E2D\u6240\u6709\u53EF\u7528\u7684\u7D22\u5F15\u7B7E\u540D\u7684\u952E\uFF08key\uFF09\u3002</p><p><code>keyof</code> \u662F TypeScript \u7684\u4E00\u4E2A\u5173\u952E\u5B57\uFF0C\u7528\u4E8E\u83B7\u53D6\u4E00\u4E2A\u7C7B\u578B\u7684\u6240\u6709<code>\u952E</code>\u7684\u8054\u5408\u7C7B\u578B\u3002<code>K1</code> \u7684\u7C7B\u578B\u5B9A\u4E49\u4E3A <code>keyof StringIndexArray</code>\uFF0C\u8FD9\u610F\u5473\u7740 <code>K1</code> \u662F <code>StringIndexArray</code> \u4E2D\u6240\u6709\u53EF\u7528\u7684\u952E\u7684\u8054\u5408\u7C7B\u578B\u3002\u7531\u4E8E <code>StringIndexArray</code> \u4E2D\u7684\u7D22\u5F15\u7B7E\u540D\u53EF\u4EE5\u4F7F\u7528<code>\u4EFB\u4F55\u5B57\u7B26\u4E32</code>\u4F5C\u4E3A\u952E(<code>\u5728javascript\u4E2D\uFF0Cobj[&#39;1&#39;] === obj[1]</code>),\u56E0\u6B64 <code>K1</code> \u7684\u7C7B\u578B\u4E3A <code>string | number</code>\uFF0C\u5373\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u7C7B\u578B\u7684\u8054\u5408\u7C7B\u578B\u3002</p><p>\u540C\u6837\u5730\uFF0C<code>K2</code> \u7684\u7C7B\u578B\u5B9A\u4E49\u4E3A <code>keyof NumberIndexArray</code>\uFF0C\u8FD9\u610F\u5473\u7740 <code>K2</code> \u662F <code>NumberIndexArray</code> \u4E2D\u6240\u6709\u53EF\u7528\u7684\u952E\u7684\u8054\u5408\u7C7B\u578B\u3002\u7531\u4E8E <code>NumberIndexArray</code> \u4E2D\u7684\u7D22\u5F15\u7B7E\u540D\u53EA\u80FD\u4F7F\u7528\u6570\u5B57\u4F5C\u4E3A\u952E\uFF0C\u56E0\u6B64 <code>K2</code> \u7684\u7C7B\u578B\u4E3A <code>number</code>\uFF0C\u5373\u6570\u5B57\u7C7B\u578B\u3002</p></details><h4 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h4>`,53),D={href:"https://mariusschulz.com/blog/keyof-and-lookup-types-in-typescript",target:"_blank",rel:"noopener noreferrer"},V=n("br",null,null,-1),$={href:"https://stackoverflow.com/questions/51808160/keyof-inferring-string-number-when-key-is-only-a-string",target:"_blank",rel:"noopener noreferrer"},G=n("br",null,null,-1),X={href:"https://www.typescriptlang.org/docs/handbook/interfaces.html#indexable-types",target:"_blank",rel:"noopener noreferrer"},H=p(`<h3 id="_1-3-typeof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#_1-3-typeof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> 1.3 typeof \u64CD\u4F5C\u7B26</h3><h4 id="\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#\u7B80\u4ECB" aria-hidden="true">#</a> \u7B80\u4ECB</h4><p>\u5728 JavaScript \u4E2D\uFF0C\u4F60\u53EF\u4EE5\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u83B7\u53D6\u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u5728 TypeScript \u4E2D\uFF0Ctypeof \u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u83B7\u53D6\u4E00\u4E2A\u53D8\u91CF\u6216\u5BF9\u8C61\u7684\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> sem<span class="token operator">:</span> Person <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;semlinker&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Sem</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> sem<span class="token punctuation">;</span> <span class="token comment">// type Sem = Person</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6211\u4EEC\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u83B7\u53D6 sem \u53D8\u91CF\u7684\u7C7B\u578B\u5E76\u8D4B\u503C\u7ED9 Sem \u7C7B\u578B\u53D8\u91CF\uFF0C\u4E4B\u540E\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 Sem \u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> lolo<span class="token operator">:</span> Sem <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&quot;lolo&quot;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">5</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u5E94\u7528\u573A\u666F</h4><ul><li>1.\u83B7\u53D6\u5BF9\u8C61\u7684\u7C7B\u578B <img src="`+u+`" alt="1"> man \u5BF9\u8C61\u662F\u4E00\u4E2A\u5E38\u89C4\u7684 JavaScript \u5BF9\u8C61\uFF0C\u5728 TypeScript \u4E2D\u4F60\u53EF\u4EE5\u4F7F\u7528\u7C7B\u578B\u6216\u63A5\u53E3\u6765\u5B9A\u4E49\u5BF9\u8C61\u7684\u7C7B\u578B\u3002\u4F7F\u7528\u6B64\u5BF9\u8C61\u7C7B\u578B\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528 TypeScript \u7684\u5185\u7F6E\u5B9E\u7528\u7A0B\u5E8F\u7C7B\u578B\uFF08\u4F8B\u5982 Partial\u3001Required\u3001Pick \u6216 Readonly\uFF09\u6765\u5904\u7406\u5BF9\u8C61\u7C7B\u578B\u4EE5\u6EE1\u8DB3\u4E0D\u540C\u7684\u9700\u6C42\u3002 \u5BF9\u4E8E\u7B80\u5355\u7684\u5BF9\u8C61\uFF0C\u8FD9\u53EF\u80FD\u6CA1\u4EC0\u4E48\u5927\u4E0D\u4E86\u7684\u3002\u4F46\u662F\u5BF9\u4E8E\u5D4C\u5957\u5C42\u6B21\u66F4\u6DF1\u7684\u5927\u578B\u590D\u6742\u5BF9\u8C61\uFF0C\u624B\u52A8\u5B9A\u4E49\u592A\u9EBB\u70E6\u3002\u8981\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u53EF\u4EE5\u4F7F\u7528 typeof \u8FD0\u7B97\u7B26\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Person</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> man<span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Address</span> <span class="token operator">=</span> Person<span class="token punctuation">[</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u4E4B\u524D\u624B\u52A8\u5B9A\u4E49\u7C7B\u578B\u76F8\u6BD4\uFF0C\u4F7F\u7528 typeof \u8FD0\u7B97\u7B26\u53D8\u5F97\u5BB9\u6613\u5F97\u591A\u3002 Person[&quot;address&quot;] \u662F\u4E00\u79CD\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\uFF0C\u7528\u4E8E\u5728\u53E6\u4E00\u79CD\u7C7B\u578B\uFF08Person \u7C7B\u578B\uFF09\u4E0A\u67E5\u627E\u7279\u5B9A\u5C5E\u6027\uFF08\u5730\u5740\uFF09\u3002</p><ul><li>2.\u83B7\u53D6\u4E00\u4E2A\u7C7B\u578B\uFF0C\u8BE5\u7C7B\u578B\u5C06\u6240\u6709\u679A\u4E3E\u952E\u8868\u793A\u4E3A\u5B57\u7B26\u4E32\u3002 \u5728 TypeScript \u4E2D\uFF0C\u679A\u4E3E\u7C7B\u578B\u662F\u7F16\u8BD1\u6210\u5E38\u89C4 JavaScript \u5BF9\u8C61\u7684\u7279\u6B8A\u7C7B\u578B\uFF1A <img src="`+k+'" alt="2"> \u56E0\u6B64\uFF0C\u60A8\u8FD8\u53EF\u4EE5\u5728\u679A\u4E3E\u7C7B\u578B\u4E0A\u4F7F\u7528 typeof \u8FD0\u7B97\u7B26\u3002\u4F46\u8FD9\u901A\u5E38\u6CA1\u6709\u592A\u5927\u7684\u5B9E\u9645\u7528\u9014\uFF0C\u5728\u5904\u7406\u679A\u4E3E\u7C7B\u578B\u65F6\uFF0C\u901A\u5E38\u4E0E keyof \u8FD0\u7B97\u7B26\u7ED3\u5408\u4F7F\u7528\uFF1A <img src="'+d+'" alt="3"></li><li>3.\u83B7\u53D6\u51FD\u6570\u5BF9\u8C61\u7684\u7C7B\u578B \u8FD8\u6709\u53E6\u4E00\u79CD\u66F4\u5E38\u89C1\u7684\u573A\u666F\uFF0C\u5728\u60A8\u7684\u5DE5\u4F5C\u4E2D\u4F7F\u7528 typeof \u8FD0\u7B97\u7B26\u3002\u83B7\u53D6\u5230\u5BF9\u5E94\u7684\u51FD\u6570\u7C7B\u578B\u540E\uFF0C\u53EF\u4EE5\u7EE7\u7EED\u4F7F\u7528 TypeScript \u5185\u7F6E\u7684 ReturnType \u548C Parameters \u5B9E\u7528\u7C7B\u578B\u5206\u522B\u83B7\u53D6\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u548C\u53C2\u6570\u7C7B\u578B\u3002 <img src="'+m+'" alt="4"></li><li><ol start="4"><li>\u83B7\u53D6\u7C7B\u5BF9\u8C61\u7684\u7C7B\u578B \u65E2\u7136 typeof \u64CD\u4F5C\u7B26\u53EF\u4EE5\u5904\u7406\u51FD\u6570\u5BF9\u8C61\uFF0C\u90A3\u4E48\u5B83\u53EF\u4EE5\u5904\u7406 Class \u5BF9\u8C61\u5417\uFF1F\u7B54\u6848\u662F\u80AF\u5B9A\u7684\u3002 <img src="'+v+'" alt="4"> \u5728\u4E0A\u9762\u7684\u4EE3\u7801\u4E2D\uFF0CcreatePoint \u662F\u4E00\u4E2A\u5DE5\u5382\u51FD\u6570\uFF0C\u5B83\u521B\u5EFA\u4E86\u4E00\u4E2A Point \u7C7B\u7684\u5B9E\u4F8B\u3002\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u53EF\u4EE5\u83B7\u53D6 Point \u7C7B\u5BF9\u5E94\u7684\u6784\u9020\u7B7E\u540D\uFF0C\u4ECE\u800C\u5B9E\u73B0\u5BF9\u5E94\u7684\u7C7B\u578B\u6821\u9A8C\u3002\u5728\u5B9A\u4E49 Constructor \u7684\u53C2\u6570\u7C7B\u578B\u65F6\uFF0C\u5982\u679C\u6CA1\u6709\u4F7F\u7528 typeof \u64CD\u4F5C\u7B26\uFF0C\u4F1A\u51FA\u73B0\u5982\u4E0B\u9519\u8BEF\u4FE1\u606F\uFF1A <img src="'+b+'" alt="4"></li></ol></li><li><ol start="5"><li>\u83B7\u5F97\u66F4\u7CBE\u786E\u7684\u7C7B\u578B \u5728\u4F7F\u7528 typeof \u8FD0\u7B97\u7B26\u65F6\uFF0C\u5982\u679C\u4F60\u60F3\u5F97\u5230\u66F4\u7CBE\u786E\u7684\u7C7B\u578B\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5C06\u5B83\u4E0E TypeScript 3.4 \u7248\u672C\u4E2D\u5F15\u5165\u7684 const \u65AD\u8A00\u7ED3\u5408\u8D77\u6765\u3002\u8FD9\u4EE5\u4EE5\u4E0B\u65B9\u5F0F\u4F7F\u7528\u3002 <img src="'+y+`" alt="4"> \u4ECE\u4E0A\u56FE\u53EF\u4EE5\u770B\u51FA\uFF0C\u5728\u4F7F\u7528\u4E86 const \u65AD\u8A00\u4E4B\u540E\uFF0C\u518D\u4F7F\u7528 typeof \u64CD\u4F5C\u7B26\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5F97\u5230\u66F4\u7CBE\u786E\u7684\u7C7B\u578B\u3002</li></ol></li></ul><h4 id="const-\u65AD\u8A00" tabindex="-1"><a class="header-anchor" href="#const-\u65AD\u8A00" aria-hidden="true">#</a> const \u65AD\u8A00</h4><p>TypeScript 3.4 \u5F15\u5165\u4E86\u4E00\u79CD\u65B0\u7684\u5B57\u9762\u91CF\u6784\u9020\u65B9\u5F0F\uFF0C\u4E5F\u79F0\u4E3A const \u65AD\u8A00\u3002\u5F53\u6211\u4EEC\u4F7F\u7528 const \u65AD\u8A00\u6784\u9020\u65B0\u7684\u5B57\u9762\u91CF\u8868\u8FBE\u5F0F\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5411\u7F16\u7A0B\u8BED\u8A00\u53D1\u51FA\u4EE5\u4E0B\u4FE1\u53F7\uFF1A</p><ul><li>\u25CF \u8868\u8FBE\u5F0F\u4E2D\u7684\u4EFB\u4F55\u5B57\u9762\u91CF\u7C7B\u578B\u90FD\u4E0D\u5E94\u8BE5\u88AB\u6269\u5C55\uFF1B</li><li>\u25CF \u5BF9\u8C61\u5B57\u9762\u91CF\u7684\u5C5E\u6027\uFF0C\u5C06\u4F7F\u7528 readonly \u4FEE\u9970\uFF1B</li><li>\u25CF \u6570\u7EC4\u5B57\u9762\u91CF\u5C06\u53D8\u6210 readonly \u5143\u7EC4\u3002 \u4E0B\u9762\u6211\u4EEC\u6765\u4E3E\u4E00\u4E2A const \u65AD\u8A00\u7684\u4F8B\u5B50\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token string">&quot;hello&quot;</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">X</span></span> <span class="token operator">=</span> <span class="token keyword">typeof</span> x<span class="token punctuation">;</span> <span class="token comment">// type X = &quot;hello&quot;</span>

<span class="token keyword">let</span> y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">Y</span></span> <span class="token operator">=</span> <span class="token keyword">typeof</span> y<span class="token punctuation">;</span> <span class="token comment">// type Y = readonly [10, 20]</span>

<span class="token keyword">let</span> z <span class="token operator">=</span> <span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&quot;hello&quot;</span> <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">Z</span></span> <span class="token operator">=</span> <span class="token keyword">typeof</span> z<span class="token punctuation">;</span> <span class="token comment">// let z: { readonly text: &quot;hello&quot;; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6570\u7EC4\u5B57\u9762\u91CF\u5E94\u7528 const \u65AD\u8A00\u540E\uFF0C\u5B83\u5C06\u53D8\u6210 readonly \u5143\u7EC4\uFF0C\u4E4B\u540E\u6211\u4EEC\u8FD8\u53EF\u4EE5\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u83B7\u53D6\u5143\u7EC4\u4E2D\u5143\u7D20\u503C\u7684\u8054\u5408\u7C7B\u578B\uFF0C\u5177\u4F53\u5982\u4E0B\uFF1A \u8FD9\u540C\u6837\u9002\u7528\u4E8E\u5305\u542B\u5F15\u7528\u7C7B\u578B\u7684\u6570\u7EC4\uFF0C\u6BD4\u5982\u5305\u542B\u666E\u901A\u7684\u5BF9\u8C61\u7684\u6570\u7EC4\u3002\u8FD9\u91CC\u6211\u4EEC\u4E5F\u6765\u4E3E\u4E00\u4E2A\u5177\u4F53\u7684\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> locales <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    locale<span class="token operator">:</span> <span class="token string">&quot;zh-CN&quot;</span><span class="token punctuation">,</span>
    language<span class="token operator">:</span> <span class="token string">&quot;\u4E2D\u6587&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    locale<span class="token operator">:</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>
    language<span class="token operator">:</span> <span class="token string">&quot;English&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

<span class="token comment">// type Locale = &quot;zh-CN&quot; | &quot;en&quot;</span>
<span class="token keyword">type</span> <span class="token class-name">Locale</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> locales<span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;locale&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\u5728\u4F7F\u7528 const \u65AD\u8A00\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u6CE8\u610F\u4EE5\u4E0B\u4E24\u4E2A\u6CE8\u610F\u4E8B\u9879\uFF1A</p><ul><li>\u25CF const \u65AD\u8A00\u53EA\u9002\u7528\u4E8E\u7B80\u5355\u7684\u5B57\u9762\u91CF\u8868\u8FBE\u5F0F</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// A &#39;const&#39; assertions can only be applied to references to enum members,</span>
<span class="token comment">// or string, number, boolean, array, or object literals.</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span> <span class="token comment">// error</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u25CF const \u4E0A\u4E0B\u6587\u4E0D\u4F1A\u7ACB\u5373\u5C06\u8868\u8FBE\u5F0F\u8F6C\u6362\u4E3A\u5B8C\u5168\u4E0D\u53EF\u53D8</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span>
  contents<span class="token operator">:</span> arr<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">;</span>

foo<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span> <span class="token comment">// error!</span>
foo<span class="token punctuation">.</span>contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// error!</span>

foo<span class="token punctuation">.</span>contents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ...works!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="typeof-\u548C-keyof-\u64CD\u4F5C\u7B26" tabindex="-1"><a class="header-anchor" href="#typeof-\u548C-keyof-\u64CD\u4F5C\u7B26" aria-hidden="true">#</a> typeof \u548C keyof \u64CD\u4F5C\u7B26</h4><p>\u5728 TypeScript \u4E2D\uFF0Ctypeof \u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u6765\u83B7\u53D6\u4E00\u4E2A\u53D8\u91CF\u6216\u5BF9\u8C61\u7684\u7C7B\u578B\u3002\u800C keyof \u64CD\u4F5C\u7B26\u53EF\u4EE5\u7528\u4E8E\u83B7\u53D6\u67D0\u79CD\u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C\u5176\u8FD4\u56DE\u7C7B\u578B\u662F\u8054\u5408\u7C7B\u578B\u3002\u4E86\u89E3\u5B8C typeof \u548C keyof \u64CD\u4F5C\u7B26\u7684\u4F5C\u7528\uFF0C\u6211\u4EEC\u6765\u4E3E\u4E2A\u4F8B\u5B50\uFF0C\u4ECB\u7ECD\u4E00\u4E0B\u5B83\u4EEC\u5982\u4F55\u7ED3\u5408\u5728\u4E00\u8D77\u4F7F\u7528\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token constant">COLORS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  red<span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
  blue<span class="token operator">:</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u9996\u5148\u901A\u8FC7 typeof \u64CD\u4F5C\u7B26\u83B7\u53D6 Colors \u53D8\u91CF\u7684\u7C7B\u578B\uFF0C\u7136\u540E\u901A\u8FC7 keyof \u64CD\u4F5C\u7B26\u83B7\u53D6\u8BE5\u7C7B\u578B\u7684\u6240\u6709\u952E\uFF0C</span>
<span class="token comment">// \u5373\u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u8054\u5408\u7C7B\u578B &#39;red&#39; | &#39;blue&#39;</span>
<span class="token keyword">type</span> <span class="token class-name">Colors</span> <span class="token operator">=</span> <span class="token keyword">keyof</span> <span class="token keyword">typeof</span> <span class="token constant">COLORS</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> color<span class="token operator">:</span> Colors<span class="token punctuation">;</span>
color <span class="token operator">=</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>
color <span class="token operator">=</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Ok</span>

<span class="token comment">// Type &#39;&quot;yellow&quot;&#39; is not assignable to type &#39;&quot;red&quot; | &quot;blue&quot;&#39;.</span>
color <span class="token operator">=</span> <span class="token string">&quot;yellow&quot;</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u53C2\u8003\u8D44\u6599-1" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599-1" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h4><ul><li>\u25CF typescript-get-types-from-data-using-typeof</li><li>\u25CF 5 Very Useful Tricks for TypeScript Typeof Operator</li></ul><h3 id="_1-4-\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-4-\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> 1.4 \u6761\u4EF6\u7C7B\u578B</h3><p>\u60A8\u662F\u5426\u4F7F\u7528\u8FC7 Exclude\u3001Extract\u3001NonNullable\u3001Parameters \u548C ReturnType \u5B9E\u7528\u7A0B\u5E8F\u7C7B\u578B\uFF1F \u4F60\u77E5\u9053\u4ED6\u4EEC\u5728\u5185\u90E8\u662F\u5982\u4F55\u5DE5\u4F5C\u7684\u5417\uFF1F \u5176\u5B9E\u4E0A\u9762\u7684 TypeScript \u5185\u7F6E\u7684\u5B9E\u7528\u7A0B\u5E8F\u7C7B\u578B\u90FD\u662F\u57FA\u4E8E\u6761\u4EF6\u5F00\u53D1\u7684\u3002</p><p><img src="`+e+`" alt="4"></p><h4 id="\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD" aria-hidden="true">#</a> \u4ECB\u7ECD</h4><p>\u6761\u4EF6\u7C7B\u578B\uFF08Conditional Types\uFF09\u6709\u52A9\u4E8E\u63CF\u8FF0\u8F93\u5165\u4E0E\u8F93\u51FA\u7C7B\u578B\u4E4B\u95F4\u7684\u5173\u7CFB\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">live</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">interface</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">woof</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">Example1</span> <span class="token operator">=</span> Dog <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token comment">//type Example1 = number</span>
<span class="token keyword">type</span> <span class="token class-name">Example2</span> <span class="token operator">=</span> RegExp <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token operator">?</span> <span class="token builtin">number</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token comment">//type Example2 = string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="extend-\u7528\u4E8E\u6761\u4EF6\u5224\u65AD\u65F6\u4EE5\u4E0B\u89C4\u5F8B" tabindex="-1"><a class="header-anchor" href="#extend-\u7528\u4E8E\u6761\u4EF6\u5224\u65AD\u65F6\u4EE5\u4E0B\u89C4\u5F8B" aria-hidden="true">#</a> extend \u7528\u4E8E\u6761\u4EF6\u5224\u65AD\u65F6\u4EE5\u4E0B\u89C4\u5F8B</h4><p>\u25CF \u82E5\u4F4D\u4E8E extends \u4E24\u4FA7\u7684\u7C7B\u578B\u76F8\u540C\uFF0C\u5219 extends \u5728\u8BED\u4E49\u4E0A\u53EF\u4EE5\u7406\u89E3\u4E3A===\uFF0C\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span>
  <span class="token operator">|</span> Without<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span>
  <span class="token operator">|</span> Without<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span>
  <span class="token operator">|</span> Without<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u25CF \u82E5 extends \u53F3\u4FA7\u7C7B\u578B\u4F4D\u4E8E extends \u5DE6\u4FA7\uFF0C\u5373\u53F3\u4FA7\u7C7B\u578B\u66F4\u5E7F\u6CDB\uFF0C\u5219 true\uFF0C\u53CD\u4E4B false</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">result3</span> <span class="token operator">=</span> <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">string</span></span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u25CF extends \u7528\u4F5C\u5BF9\u8C61\uFF0C\u5BF9\u8C61\u4E2D\u6307\u5B9A key \u8D8A\u591A\uFF0C\u5219\u5176\u7C7B\u578B\u5B9A\u4E49\u7684\u8303\u56F4\u8D8A\u72ED\u7A84\uFF0C\u5373\u53F3\u4FA7 key \u5305\u542B\u5DE6\u4FA7 key</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">result4</span> <span class="token operator">=</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span> b<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> a<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B" aria-hidden="true">#</a> \u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B</h4><p>\u6761\u4EF6\u7C7B\u578B\u8FD8\u6709\u4E00\u4E2A\u7279\u6027\uFF1A\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u3002\u5728\u7ED3\u5408\u8054\u5408\u7C7B\u578B\u4F7F\u7528\u65F6\uFF08\u53EA\u9488\u5BF9 extends \u5DE6\u8FB9\u7684\u8054\u5408\u7C7B\u578B\uFF09\uFF0C\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u4F1A\u88AB\u81EA\u52A8\u5206\u53D1\u6210\u8054\u5408\u7C7B\u578B\u3002 <img src="`+e+'" alt="4"><img src="'+g+`" alt="4"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span>   \u7B49\u4EF7\u4E8E  <span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span>
<span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span> <span class="token function">\u7B49\u4EF7\u4E8E</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">number</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span> <span class="token function">\u7B49\u4EF7\u4E8E</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">number</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">boolean</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">A</span> <span class="token operator">:</span> <span class="token constant">B</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>eg\uFF1A\u5047\u8BBE\u6211\u4EEC\u6709\u4E00\u4E2A\u6CDB\u578B\u7C7B\u578B Widthout&lt;T,U&gt;,\u7528\u4E8E\u7B5B\u9009\u5728 T \u4F46\u662F\u4E0D\u5728 U \u4E2D\u7684\u7C7B\u578B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Without<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">U</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Without<span class="token operator">&lt;</span><span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// number | string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5206\u6790\uFF1A \u25CF \u7ED9\u6CDB\u578B\u6267\u884C\u5177\u4F53\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> Without<span class="token operator">&lt;</span><span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u25CF \u81EA\u52A8\u5206\u53D1\u4E3A\u8054\u5408\u7C7B\u578B</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span>
  <span class="token operator">|</span> Without<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span>
  <span class="token operator">|</span> Without<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span>
  <span class="token operator">|</span> Without<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u25CF \u66FF\u6362\u4E3A\u5177\u4F53\u5B9A\u4E49</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">boolean</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span>
  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">number</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span>
  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">string</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token builtin">never</span> <span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u25CF \u7ED3\u679C</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">A</span></span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5206\u5E03\u5F0F\u6761\u4EF6 \u5728\u5B98\u65B9\u6587\u6863\u4E2D\u63D0\u5230\uFF0C\u5206\u5E03\u5F0F\u6761\u4EF6\u7C7B\u578B\u662F\u6709\u524D\u63D0\u7684\u3002\u6761\u4EF6\u7C7B\u578B\u4E2D\u5F85\u68C0\u67E5\u7684\u7C7B\u578B\uFF08\u5373 extends \u5DE6\u8FB9\u7684\u7C7B\u578B\uFF09\u5FC5\u987B\u662F\u88F8\u7C7B\u578B\uFF08naked type parameter\uFF09\u3002\u5373\u6CA1\u6709\u88AB\u8BF8\u5982\u6570\u7EC4\uFF0C\u5143\u7EC4\u6216\u8005\u51FD\u6570\u5305\u88F9\u3002 <img src="`+f+`" alt="4"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// naked type</span>
<span class="token keyword">type</span> <span class="token class-name">NakedType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> <span class="token string">&quot;yes&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">DistributedUsage</span> <span class="token operator">=</span> NakedType<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;yes&quot; | &quot;no&quot;</span>

<span class="token comment">// wrapped type</span>
<span class="token class-name"><span class="token keyword">type</span></span> WrappedType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Array</span><span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span></span> <span class="token operator">?</span> <span class="token string">&quot;yes&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;no&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">NonDistributedUsage</span> <span class="token operator">=</span> WrappedType<span class="token operator">&lt;</span><span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// &quot;no&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u7C7B\u578B\u63A8\u65AD-infer" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u578B\u63A8\u65AD-infer" aria-hidden="true">#</a> \u7C7B\u578B\u63A8\u65AD infer</h4><p>\u5728\u6761\u4EF6\u7C7B\u578B\u8BED\u53E5\u4E2D\uFF0C\u53EF\u4EE5\u7528 infer \u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\u5E76\u4E14\u5BF9\u5B83\u8FDB\u884C\u4F7F\u7528\u3002 \u63A8\u65AD\u7528\u4E8E\u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\uFF0C\u4EE5\u5B58\u50A8\u6A21\u5F0F\u5339\u914D\u671F\u95F4\u6355\u83B7\u7684\u7C7B\u578B\u3002 \u60A8\u77E5\u9053\u5982\u4F55\u83B7\u53D6 T0 \u6570\u7EC4\u7C7B\u578B\u4E2D\u7684\u5143\u7D20\u7C7B\u578B\u548C T1 \u51FD\u6570\u7C7B\u578B\u4E2D\u7684\u8FD4\u56DE\u503C\u7C7B\u578B\u5417\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T0</span></span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">T1</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6761\u4EF6\u7C7B\u578B\u5141\u8BB8\u6211\u4EEC\u68C0\u6D4B\u4E24\u79CD\u7C7B\u578B\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u901A\u8FC7\u6761\u4EF6\u7C7B\u578B\uFF0C\u6211\u4EEC\u53EF\u4EE5\u786E\u5B9A\u4E24\u79CD\u7C7B\u578B\u662F\u5426\u517C\u5BB9\u3002\u63A8\u65AD\u7528\u4E8E\u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF\uFF0C\u4EE5\u5B58\u50A8\u6A21\u5F0F\u5339\u914D\u671F\u95F4\u6355\u83B7\u7684\u7C7B\u578B\u3002 \u4E0B\u8FB9\u662F\u5982\u4F55\u6355\u83B7 T0 \u6570\u7EC4\u7C7B\u578B\u4E2D\u7684\u5143\u7D20\u7C7B\u578B\u3002 <img src="`+w+'" alt="4"> T extends (infer U)[] ? U : T \u662F\u6761\u4EF6\u7C7B\u578B\u8BED\u6CD5 info U \u662F\u5F15\u5165\u7684\u65B0\u7684\u7C7B\u578B\u53D8\u91CF\u6765\u5B58\u50A8\u63A8\u7C7B\u578B\u3002 \u63A5\u4E0B\u6765\u770B\u770B\u5B9E\u7528\u7C7B\u578B UnpackedArray \u7684\u6267\u884C\u8FC7\u7A0B\u3002 <img src="'+h+'" alt="4"></p><p><img src="'+x+`" alt="4"> \u6CE8\u610F\uFF1A\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u63A8\u65AD\u53EA\u80FD\u5728\u6761\u4EF6\u7C7B\u578B\u7684\u6269\u5C55\u5B50\u53E5\u4E2D\u4F7F\u7528\uFF0C\u800C\u63A8\u65AD\u58F0\u660E\u7684\u7C7B\u578B\u53D8\u91CF\u53EA\u80FD\u5728\u6761\u4EF6\u7C7B\u578B\u7684 true \u5206\u652F\u4E2D\u4F7F\u7528\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Wrong1<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name">Wrong2<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token constant">T</span></span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
<span class="token keyword">type</span> <span class="token class-name">Wrong3<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">:</span> <span class="token constant">U</span><span class="token punctuation">;</span> <span class="token comment">// Error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+q+`" alt="4"></p><ul><li>\u83B7\u53D6\u8FD4\u56DE\u503C\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">UnpackedFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">U1</span></span> <span class="token operator">=</span> UnpackedFn<span class="token operator">&lt;</span><span class="token constant">T1</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u6D89\u53CA\u5230\u51FD\u6570\u91CD\u8F7D\u573A\u666F\u65F6\uFF0CTypeScript \u5C06\u4F7F\u7528\u6700\u540E\u4E00\u4E2A\u8C03\u7528\u7B7E\u540D\u8FDB\u884C\u7C7B\u578B\u63A8\u65AD\u3002 <img src="`+T+'" alt="4"></p><p><img src="'+_+`" alt="4"></p><ul><li>\u63A8\u65AD\u5BF9\u8C61\u7C7B\u578B</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name">PropertyType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">;</span> name<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">R</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">U3</span></span> <span class="token operator">=</span> PropertyType<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// [number, string]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+P+`" alt="4"> \u5728 PropertyType \u5B9E\u7528\u7A0B\u5E8F\u7C7B\u578B\u4E2D\uFF0C\u6211\u4EEC\u4F7F\u7528 infer \u6765\u58F0\u660E\u4E24\u4E2A\u7C7B\u578B\u53D8\u91CF u \u548C R\uFF0C\u5B83\u4EEC\u5206\u522B\u8868\u793A\u5BF9\u8C61\u7C7B\u578B\u4E2D id \u548C name \u5C5E\u6027\u7684\u7C7B\u578B\u3002\u5982\u679C\u7C7B\u578B\u5339\u914D\uFF0C\u6211\u4EEC\u5C06 id \u548C name \u5C5E\u6027\u7684\u7C7B\u578B\u4F5C\u4E3A\u5143\u7EC4\u8FD4\u56DE\u3002 \u5982\u679C\u5728 PropertyType \u5B9E\u7528\u7A0B\u5E8F\u7C7B\u578B\u4E2D\u53EA\u58F0\u660E\u4E00\u4E2A\u7C7B\u578B\u53D8\u91CF U\uFF0C\u7ED3\u679C\u4F1A\u662F\u4EC0\u4E48\uFF1F</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">PropertyType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">;</span> name<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span> <span class="token punctuation">}</span> <span class="token operator">?</span> <span class="token constant">U</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">U4</span></span> <span class="token operator">=</span> PropertyType<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string | number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+S+`" alt="4"></p><p>U4 \u7C7B\u578B\u8FD4\u56DE\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u7C7B\u578B\u7684\u8054\u5408\u3002\u4E3A\u4EC0\u4E48\u5B83\u4F1A\u8FD4\u56DE\u8FD9\u6837\u7684\u7ED3\u679C\uFF1F\u8FD9\u662F\u56E0\u4E3A\uFF0C\u5982\u679C\u5728\u534F\u53D8\u4F4D\u7F6E\u5B58\u5728\u540C\u4E00\u7C7B\u578B\u53D8\u91CF\u7684\u591A\u4E2A\u5019\u9009\u53D8\u91CF\uFF0C\u5219\u6700\u7EC8\u7C7B\u578B\u5C06\u88AB\u63A8\u65AD\u4E3A\u8054\u5408\u7C7B\u578B\u3002 \u4F46\u662F\uFF0C\u5728\u9006\u53D8\u4F4D\u7F6E\uFF0C\u5982\u679C\u540C\u4E00\u7C7B\u578B\u53D8\u91CF\u6709\u591A\u4E2A\u5019\u9009\u53D8\u91CF\uFF0C\u5219\u6700\u7EC8\u7C7B\u578B\u5C06\u88AB\u63A8\u65AD\u4E3A\u4EA4\u96C6\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Bar<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token keyword">infer</span> <span class="token constant">U</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span>
  <span class="token operator">?</span> <span class="token constant">U</span>
  <span class="token operator">:</span> <span class="token builtin">never</span><span class="token punctuation">;</span>

<span class="token keyword">type</span> <span class="token class-name"><span class="token constant">U5</span></span> <span class="token operator">=</span> Bar<span class="token operator">&lt;</span><span class="token punctuation">{</span> <span class="token function-variable function">a</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span> <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token punctuation">}</span><span class="token operator">&gt;</span><span class="token punctuation">;</span> <span class="token comment">// string &amp; number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+K+'" alt="4"> U5 \u7C7B\u578B\u8FD4\u56DE\u7531\u5B57\u7B26\u4E32\u548C\u6570\u5B57\u7C7B\u578B\u7EC4\u6210\u7684\u4EA4\u96C6\u7C7B\u578B\uFF0C\u5373\u6700\u7EC8\u7C7B\u578B\u4ECE\u4E0D\u4E3A\u7C7B\u578B\u3002</p><h3 id="_1-5-\u6620\u5C04\u7C7B\u578B-mapped-type" tabindex="-1"><a class="header-anchor" href="#_1-5-\u6620\u5C04\u7C7B\u578B-mapped-type" aria-hidden="true">#</a> 1.5 \u6620\u5C04\u7C7B\u578B Mapped Type</h3><p>\u5728\u6570\u5B66\u4E2D\uFF0C\u6620\u5C04\u662F\u6307\u4E24\u4E2A\u5143\u7D20\u7684\u96C6\u5408\u4E4B\u95F4\u5143\u7D20\u76F8\u4E92\u5BF9\u5E94\u7684\u5173\u7CFB\uFF0C\u53EF\u4EE5\u5C06\u6620\u5C04\u7406\u89E3\u4E3A\u51FD\u6570\uFF0C\u5982\u4E0A\u56FE\uFF0C\u5F53\u6211\u4EEC\u9700\u8981\u5C06\u96C6\u5408 A \u7684\u5143\u7D20\u8F6C\u6362\u4E3A\u96C6\u5408 B \u7684\u5143\u7D20\uFF0C\u53EF\u4EE5\u901A\u8FC7 f \u51FD\u6570\u505A\u6620\u5C04\uFF0C\u6BD4\u5982\u5C06\u96C6\u5408 A \u7684\u5143\u7D20 1 \u5BF9\u5E94\u5230\u96C6\u5408 B \u4E2D\u7684\u5143\u7D20 2\u3002</p><h5 id="\u4ECB\u7ECD-1" tabindex="-1"><a class="header-anchor" href="#\u4ECB\u7ECD-1" aria-hidden="true">#</a> \u4ECB\u7ECD</h5><p>\u4F60\u77E5\u9053 Partial, Required, Readonly, \u548C Pick \u5B9E\u7528\u7C7B\u578B\u7684\u5B9E\u73B0\u539F\u7406\u5417\uFF1F <img src="'+C+`" alt="4"> \u5728\u8FD9\u91CC\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 TypeScript \u6765\u5B9A\u4E49\u4E00\u4E2A\u9700\u8981\u6240\u6709\u952E\u7684\u7528\u6237\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">User</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  address<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  phone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u5E38\uFF0C\u5BF9\u4E8E\u6CE8\u518C\u7528\u6237\uFF0C\u6211\u4EEC\u53EA\u5141\u8BB8\u7528\u6237\u4FEE\u6539\u90E8\u5206\u7528\u6237\u4FE1\u606F\u3002\u6B64\u65F6\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A\u65B0\u7684 UserPartial \u7C7B\u578B\uFF0C\u8BE5\u7C7B\u578B\u8868\u793A\u8981\u66F4\u65B0\u7684\u7528\u6237\u5BF9\u8C61\u7684\u7C7B\u578B\uFF0C\u5176\u4E2D\u6240\u6709\u952E\u90FD\u662F\u53EF\u9009\u7684\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">UserPartial</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  password<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  address<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  phone<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u67E5\u770B\u7528\u6237\u4FE1\u606F\u7684\u573A\u666F\uFF0C\u6211\u4EEC\u5E0C\u671B\u7528\u6237\u5BF9\u8C61\u5BF9\u5E94\u7684\u5BF9\u8C61\u7C7B\u578B\u4E2D\u7684\u6240\u6709\u952E\u90FD\u662F\u53EA\u8BFB\u7684\u3002\u5BF9\u4E8E\u6B64\u8981\u6C42\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4E49\u53EA\u8BFB\u7528\u6237\u7C7B\u578B\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">ReadonlyUser</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token keyword">readonly</span> name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> password<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> address<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token keyword">readonly</span> phone<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+U+'" alt="4"></p><p><img src="'+o+'" alt="4"> \u4F7F\u7528\u6620\u5C04\u7C7B\u578B\u51CF\u5C11\u91CD\u590D\u4EE3\u7801\uFF0C\u6620\u5C04\u7C7B\u578B\u662F\u53EF\u7528\u4E8E\u5C06\u539F\u59CB\u5BF9\u8C61\u7C7B\u578B\u6620\u5C04\u5230\u65B0\u5BF9\u8C61\u7C7B\u578B\u7684\u6CDB\u578B\u7C7B\u578B\u3002</p><p><img src="'+A+'" alt="4"></p><p><img src="'+N+'" alt="4"> \u67E5\u770B\u5DF2\u7ECF\u5B9A\u4E49\u7684\u4E09\u4E2A\u4E0E\u7528\u6237\u76F8\u5173\u7684\u7C7B\u578B\uFF0C\u60A8\u4F1A\u53D1\u73B0\u5B83\u4EEC\u5305\u542B\u5927\u91CF\u91CD\u590D\u7684\u4EE3\u7801\u3002 <img src="'+j+'" alt="4"></p><p><img src="'+I+'" alt="4"></p><h4 id="\u6620\u5C04\u8BED\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6620\u5C04\u8BED\u6CD5" aria-hidden="true">#</a> \u6620\u5C04\u8BED\u6CD5\uFF1A</h4><p><img src="'+W+'" alt="4"> \u5176\u4E2D</p><ul><li>\u25CF P in K \u7C7B\u4F3C\u4E8E JavaScript for. . .in \u8BED\u53E5\uFF0C\u7528\u4E8E\u904D\u5386\u7C7B\u578B K \u4E2D\u7684\u6240\u6709\u7C7B\u578B\uFF0C</li><li>\u25CF \u4EE5\u53CA T \u7C7B\u578B\u53D8\u91CF\uFF0C\u7528\u4E8E\u8868\u793A TypeScript \u4E2D\u7684\u4EFB\u4F55\u7C7B\u578B\u3002 <img src="'+E+`" alt="4"> \u60A8\u8FD8\u53EF\u4EE5\u5728\u6620\u5C04\u8FC7\u7A0B\u4E2D\u4F7F\u7528\u9644\u52A0\u7684\u4FEE\u9970\u7B26\u53EA\u8BFB\u548C\u95EE\u53F7 (?)\u3002\u901A\u8FC7\u6DFB\u52A0\u52A0\u53F7\uFF08+\uFF09\u548C\u51CF\u53F7\uFF08-\uFF09\u524D\u7F00\u6765\u6DFB\u52A0\u548C\u5220\u9664\u76F8\u5E94\u7684\u4FEE\u9970\u7B26\u3002\u5982\u679C\u6CA1\u6709\u6DFB\u52A0\u524D\u7F00\uFF0C\u5219\u9ED8\u8BA4\u4F7F\u7528\u52A0\u53F7\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token punctuation">{</span> <span class="token punctuation">[</span> <span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span> <span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token punctuation">[</span> <span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span> <span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token punctuation">[</span> <span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span> <span class="token punctuation">]</span> <span class="token operator">-</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span> <span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span> <span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token keyword">readonly</span> <span class="token punctuation">[</span> <span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span> <span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token operator">-</span><span class="token keyword">readonly</span> <span class="token punctuation">[</span> <span class="token constant">P</span> <span class="token keyword">in</span> <span class="token constant">K</span> <span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>eg <img src="`+R+`" alt="4"></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MyPartial<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">P</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">P</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">UserPartial</span> <span class="token operator">=</span> MyPartial<span class="token operator">&lt;</span>User<span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>\u25CF in\uFF1A\u7C7B\u4F3C JS \u4E2D for...in \u4E2D\u7684 in\uFF0C\u7528\u6765\u904D\u5386\u76EE\u6807\u7C7B\u578B\u7684\u516C\u5F00\u5C5E\u6027\u540D\uFF1B</p></li><li><p>\u25CF T[P]\uFF1A\u662F\u4E2A\u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B\uFF08\u4E5F\u79F0\u67E5\u627E\u7C7B\u578B\uFF09\uFF0C\u83B7\u53D6\u6CDB\u578B T \u4E2D P \u7C7B\u578B\uFF0C\u7C7B\u4F3C JS \u4E2D\u7684\u8BBF\u95EE\u5BF9\u8C61\u7684\u65B9\u5F0F\uFF1B</p></li><li><p>\u25CF ?:\u5C06\u7C7B\u578B\u503C\u8BBE\u7F6E\u4E3A\u53EF\u9009\u7C7B\u578B\uFF1B</p></li><li><p>\u25CF { [P in keyof T] ?: T[P] | undefined}\uFF1A\u904D\u5386 keyof T \u8FD4\u56DE\u7684\u8054\u5408\u7C7B\u578B\uFF0C\u5E76\u5B9A\u4E49\u7528 P \u53D8\u91CF\u63A5\u6536\uFF0C\u5176\u6BCF\u6B21\u904D\u5386\u8FD4\u56DE\u7684\u503C\u4E3A\u53EF\u9009\u7C7B\u578B\u7684 T[P]\u3002 \u6620\u5C04\u5B8C\u6574\u6F14\u793A <img src="`+B+'" alt="4"></p><p><img src="'+M+`" alt="4"></p></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// Remove the &#39;kind&#39; property</span>
<span class="token keyword">type</span> <span class="token class-name">RemoveKindField<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> Exclude<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token punctuation">,</span> <span class="token string">&quot;kind&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">Circle</span> <span class="token punctuation">{</span>
  kind<span class="token operator">:</span> <span class="token string">&quot;circle&quot;</span><span class="token punctuation">;</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">KindlessCircle</span> <span class="token operator">=</span> RemoveKindField<span class="token operator">&lt;</span>Circle<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">//   type KindlessCircle = {</span>
<span class="token comment">//       radius: number;</span>
<span class="token comment">//   };</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+O+'" alt="4"></p><p><img src="'+L+`" alt="4"></p><ul><li>\u91CD\u65B0\u6620\u5C04\u952E\uFF08TS 4.1\uFF09 \u5728 TypeScript 4.1 \u53CA\u66F4\u9AD8\u7248\u672C\u4E2D\uFF0C\u60A8\u53EF\u4EE5\u4F7F\u7528\u6620\u5C04\u7C7B\u578B\u4E2D\u7684 as \u5B50\u53E5\u91CD\u65B0\u6620\u5C04\u6620\u5C04\u7C7B\u578B\u4E2D\u7684\u952E\uFF1A</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">MappedTypeWithNewKeys<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> NewKeyType<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">//            ^^^^^^^^^^^^^</span>
  <span class="token comment">//            New Syntax\uFF01</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u60A8\u53EF\u4EE5\u5229\u7528\u6A21\u677F\u6587\u672C\u7C7B\u578B\u7B49\u529F\u80FD\u4ECE\u4EE5\u524D\u7684\u5C5E\u6027\u540D\u79F0\u521B\u5EFA\u65B0\u7684\u5C5E\u6027\u540D\u79F0\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">type</span> <span class="token class-name">Getters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span> <span class="token keyword">as</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">get</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Capitalize<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">&amp;</span> <span class="token constant">K</span><span class="token operator">&gt;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">interface</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  age<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>
  location<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">type</span> <span class="token class-name">LazyPerson</span> <span class="token operator">=</span> Getters<span class="token operator">&lt;</span>Person<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// {</span>
<span class="token comment">//   getName: () =&gt; string;</span>
<span class="token comment">//   getAge: () =&gt; number;</span>
<span class="token comment">//   getLocation: () =&gt; string;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+z+'" alt="4"></p><p><img src="'+Y+'" alt="4"></p>',106);function Z(Q,ss){const a=l("ExternalLinkIcon");return i(),r("div",null,[J,n("p",null,[s("\u25CF "),n("a",D,[s("keyof-and-lookup-types-in-typescript"),t(a)]),V,s(" \u25CF "),n("a",$,[s("keyof-inferring-string-number-when-key-is-only-a-string"),t(a)]),G,s(" \u25CF "),n("a",X,[s("typescriptlang - indexable-types"),t(a)])]),H])}const ts=c(F,[["render",Z],["__file","Advanced-1.html.vue"]]);export{ts as default};
